{
  "nodes": [
    {
      "attributes": [
        {
          "docs": "/**\n   * Whether to apply a layout on load\n   */",
          "id": "/types/messages/msg-load-graph-MsgLoadGraph-applyLayoutOnLoad",
          "name": "applyLayoutOnLoad",
          "style": {},
          "targets": [],
          "text": "applyLayoutOnLoad: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * A list of node ids to add to the diagram\n   * @see {@link Graph}\n   */",
          "id": "/types/messages/msg-load-graph-MsgLoadGraph-graph",
          "name": "graph",
          "style": {},
          "targets": [
            "/types/graph/graph-Graph"
          ],
          "text": "graph: Graph;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The type of message\n   * @see {@link MsgType}\n   */",
          "id": "/types/messages/msg-load-graph-MsgLoadGraph-type",
          "name": "type",
          "style": {},
          "targets": [],
          "text": "type: 'load-graph';",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents a relationship/link between two nodes in the diagram.\n */",
      "id": "/types/messages/msg-load-graph-MsgLoadGraph",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/messages/msg-load-graph-MsgLoadGraph-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "MsgLoadGraph"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * The node id to open the code for\n   */",
          "id": "/types/messages/msg-open-node-code-MsgOpenNodeCode-node",
          "name": "node",
          "style": {},
          "targets": [
            "/types/graph/node-Node"
          ],
          "text": "node: Node;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The type of message\n   * @see {@link MsgType}\n   */",
          "id": "/types/messages/msg-open-node-code-MsgOpenNodeCode-type",
          "name": "type",
          "style": {},
          "targets": [],
          "text": "type: 'open-node-code';",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents a relationship/link between two nodes in the diagram.\n */",
      "id": "/types/messages/msg-open-node-code-MsgOpenNodeCode",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/messages/msg-open-node-code-MsgOpenNodeCode-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "MsgOpenNodeCode"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * The type of message\n   * @see {@link MsgType}\n   */",
          "id": "/types/messages/msg-page-ready-MsgPageReady-type",
          "name": "type",
          "style": {},
          "targets": [],
          "text": "type: 'page-ready';",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents a relationship/link between two nodes in the diagram.\n */",
      "id": "/types/messages/msg-page-ready-MsgPageReady",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/messages/msg-page-ready-MsgPageReady-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "MsgPageReady"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "id": "/types/messages/msg-type-MsgType-load-graph",
          "name": "load-graph",
          "style": {},
          "text": "load-graph",
          "type": "unionOption"
        },
        {
          "id": "/types/messages/msg-type-MsgType-update-layout-algorithm",
          "name": "update-layout-algorithm",
          "style": {},
          "text": "update-layout-algorithm",
          "type": "unionOption"
        },
        {
          "id": "/types/messages/msg-type-MsgType-update-link-path-algorithm",
          "name": "update-link-path-algorithm",
          "style": {},
          "text": "update-link-path-algorithm",
          "type": "unionOption"
        },
        {
          "id": "/types/messages/msg-type-MsgType-update-visible-nodes",
          "name": "update-visible-nodes",
          "style": {},
          "text": "update-visible-nodes",
          "type": "unionOption"
        },
        {
          "id": "/types/messages/msg-type-MsgType-open-node-code",
          "name": "open-node-code",
          "style": {},
          "text": "open-node-code",
          "type": "unionOption"
        },
        {
          "id": "/types/messages/msg-type-MsgType-page-ready",
          "name": "page-ready",
          "style": {},
          "text": "page-ready",
          "type": "unionOption"
        }
      ],
      "docs": "/**\n * Represents the different types of messages that are sent between components of the web app\n * - `load-graph`: Load a graph\n * - `update-layout-algorithm`: Update the layout algorithm\n * - `update-link-path-algorithm`: Update the link path algorithm\n * - `update-visible-nodes`: Update the visible nodes\n * - `open-node-code`: Open the code of a node (only available in the extension)\n * - `page-ready`: The page is ready to be used (this is sent from the extension webview to the extension to tell it to send the graph. It is used to solve a race condition between the webview and the extension)\n */",
      "id": "/types/messages/msg-type-MsgType",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/messages/msg-type-MsgType-TITLE",
        "nodeType": "union",
        "style": {},
        "text": "MsgType"
      },
      "type": "union"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * The layout algorithm to use\n   * @see {@link LayoutAlgorithm}\n   */",
          "id": "/types/messages/msg-update-layout-algorithm-MsgUpdateLayoutAlgorithm-layoutAlgorithm",
          "name": "layoutAlgorithm",
          "style": {},
          "targets": [
            "/types/config/layout-algorithm-LayoutAlgorithm"
          ],
          "text": "layoutAlgorithm: LayoutAlgorithm;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The type of message\n   * @see {@link MsgType}\n   */",
          "id": "/types/messages/msg-update-layout-algorithm-MsgUpdateLayoutAlgorithm-type",
          "name": "type",
          "style": {},
          "targets": [],
          "text": "type: 'update-layout-algorithm';",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents a relationship/link between two nodes in the diagram.\n */",
      "id": "/types/messages/msg-update-layout-algorithm-MsgUpdateLayoutAlgorithm",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/messages/msg-update-layout-algorithm-MsgUpdateLayoutAlgorithm-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "MsgUpdateLayoutAlgorithm"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * The link path algorithm to use\n   * @see {@link LinkPathAlgorithm}\n   */",
          "id": "/types/messages/msg-update-link-path-algorithm-MsgUpdateLinkPathAlgorithm-linkPathAlgorithm",
          "name": "linkPathAlgorithm",
          "style": {},
          "targets": [
            "/types/config/link-path-algorithm-LinkPathAlgorithm"
          ],
          "text": "linkPathAlgorithm: LinkPathAlgorithm;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The type of message\n   * @see {@link MsgType}\n   */",
          "id": "/types/messages/msg-update-link-path-algorithm-MsgUpdateLinkPathAlgorithm-type",
          "name": "type",
          "style": {},
          "targets": [],
          "text": "type: 'update-link-path-algorithm';",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents a relationship/link between two nodes in the diagram.\n */",
      "id": "/types/messages/msg-update-link-path-algorithm-MsgUpdateLinkPathAlgorithm",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/messages/msg-update-link-path-algorithm-MsgUpdateLinkPathAlgorithm-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "MsgUpdateLinkPathAlgorithm"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * The type of message\n   * @see {@link MsgType}\n   */",
          "id": "/types/messages/msg-update-visible-nodes-MsgUpdateVisibleNodes-type",
          "name": "type",
          "style": {},
          "targets": [],
          "text": "type: 'update-visible-nodes';",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents a relationship/link between two nodes in the diagram.\n */",
      "id": "/types/messages/msg-update-visible-nodes-MsgUpdateVisibleNodes",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/messages/msg-update-visible-nodes-MsgUpdateVisibleNodes-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "MsgUpdateVisibleNodes"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Configuration for the graph\n   * @see {@link Config}\n   */",
          "id": "/types/graph/graph-Graph-config",
          "name": "config",
          "style": {},
          "targets": [
            "/types/config/config-Config"
          ],
          "text": "config: Config;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Array of nodes in the graph (classes, interfaces, etc)\n   * @see {@link Node}\n   */",
          "id": "/types/graph/graph-Graph-nodes",
          "name": "nodes",
          "style": {},
          "targets": [
            "/types/graph/node-Node"
          ],
          "text": "nodes: Node[];",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Array of links/relationships between nodes\n   * @see {@link Link}\n   */",
          "id": "/types/graph/graph-Graph-links",
          "name": "links",
          "style": {},
          "targets": [
            "/types/graph/link-Link"
          ],
          "text": "links: Link[];",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents a graph/diagram containing nodes and their links.\n */",
      "id": "/types/graph/graph-Graph",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/graph/graph-Graph-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "Graph"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "id": "/types/graph/link-type-LinkType-association",
          "name": "association",
          "style": {},
          "text": "association",
          "type": "unionOption"
        },
        {
          "id": "/types/graph/link-type-LinkType-inheritance",
          "name": "inheritance",
          "style": {},
          "text": "inheritance",
          "type": "unionOption"
        }
      ],
      "docs": "/**\n * Represents the different types of relationships between nodes in the diagram.\n * - `association`: Indicates a basic association between nodes\n * - `inheritance`: Indicates an inheritance/extends relationship\n */",
      "id": "/types/graph/link-type-LinkType",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/graph/link-type-LinkType-TITLE",
        "nodeType": "union",
        "style": {},
        "text": "LinkType"
      },
      "type": "union"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * The unique identifier of the source node\n   * @see {@link Node}\n   */",
          "id": "/types/graph/link-Link-sourceId",
          "name": "sourceId",
          "style": {},
          "targets": [],
          "text": "sourceId: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The unique identifier of the source attribute\n   * @see {@link NodeAttribute}\n   */",
          "id": "/types/graph/link-Link-sourceAttributeIds",
          "name": "sourceAttributeIds",
          "style": {},
          "targets": [],
          "text": "sourceAttributeIds: string[];",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The unique identifier of the target node\n   * @see {@link Node}\n   */",
          "id": "/types/graph/link-Link-targetId",
          "name": "targetId",
          "style": {},
          "targets": [],
          "text": "targetId: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Optional text label to display on the relationship\n   */",
          "id": "/types/graph/link-Link-text",
          "name": "text",
          "style": {},
          "targets": [],
          "text": "text?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The type of relationship between the nodes\n   * @see {@link LinkType}\n   */",
          "id": "/types/graph/link-Link-type",
          "name": "type",
          "style": {},
          "targets": [
            "/types/graph/link-type-LinkType"
          ],
          "text": "type: LinkType;",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents a relationship/link between two nodes in the diagram.\n */",
      "id": "/types/graph/link-Link",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/graph/link-Link-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "Link"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * The id of the Node that this attribute extends from\n   */",
          "id": "/types/graph/node-attribute-extended-NodeAttributeExtended-ancestorNodeId",
          "name": "ancestorNodeId",
          "style": {},
          "targets": [],
          "text": "ancestorNodeId?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The name of the Node that this attribute extends from\n   */",
          "id": "/types/graph/node-attribute-extended-NodeAttributeExtended-ancestorNodeName",
          "name": "ancestorNodeName",
          "style": {},
          "targets": [],
          "text": "ancestorNodeName?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The id of the node that this attribute extends from\n   */",
          "id": "/types/graph/node-attribute-extended-NodeAttributeExtended-fatherNodeId",
          "name": "fatherNodeId",
          "style": {},
          "targets": [],
          "text": "fatherNodeId?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The name of the Node that this attribute extends from\n   */",
          "id": "/types/graph/node-attribute-extended-NodeAttributeExtended-fatherNodeName",
          "name": "fatherNodeName",
          "style": {},
          "targets": [],
          "text": "fatherNodeName?: string;",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents an attribute or method within a node in the diagram.\n */",
      "id": "/types/graph/node-attribute-extended-NodeAttributeExtended",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/graph/node-attribute-extended-NodeAttributeExtended-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "NodeAttributeExtended"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "id": "/types/graph/node-attribute-scope-NodeAttributeScope-private",
          "name": "private",
          "style": {},
          "text": "private",
          "type": "unionOption"
        },
        {
          "id": "/types/graph/node-attribute-scope-NodeAttributeScope-protected",
          "name": "protected",
          "style": {},
          "text": "protected",
          "type": "unionOption"
        },
        {
          "id": "/types/graph/node-attribute-scope-NodeAttributeScope-public",
          "name": "public",
          "style": {},
          "text": "public",
          "type": "unionOption"
        }
      ],
      "docs": "/**\n * Represents the visibility/access level of a node attribute.\n * - `private`: Attribute is only accessible within the class\n * - `protected`: Attribute is only accessible to the class and its subclasses\n * - `public`: Attribute is publicly accessible\n */",
      "id": "/types/graph/node-attribute-scope-NodeAttributeScope",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/graph/node-attribute-scope-NodeAttributeScope-TITLE",
        "nodeType": "union",
        "style": {},
        "text": "NodeAttributeScope"
      },
      "type": "union"
    },
    {
      "attributes": [
        {
          "id": "/types/graph/node-attribute-type-NodeAttributeType-attribute",
          "name": "attribute",
          "style": {},
          "text": "attribute",
          "type": "unionOption"
        },
        {
          "id": "/types/graph/node-attribute-type-NodeAttributeType-unionOption",
          "name": "unionOption",
          "style": {},
          "text": "unionOption",
          "type": "unionOption"
        },
        {
          "id": "/types/graph/node-attribute-type-NodeAttributeType-method",
          "name": "method",
          "style": {},
          "text": "method",
          "type": "unionOption"
        }
      ],
      "docs": "/**\n * Represents the different types of attributes that can be displayed in a node.\n * - `attribute`: Represents a class/interface property or field\n * - `unionOption`: Represents an enum value or type union option\n * - `method`: Represents a class/interface method or function\n */",
      "id": "/types/graph/node-attribute-type-NodeAttributeType",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/graph/node-attribute-type-NodeAttributeType-TITLE",
        "nodeType": "union",
        "style": {},
        "text": "NodeAttributeType"
      },
      "type": "union"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Unique identifier for the attribute\n   */",
          "id": "/types/graph/node-attribute-NodeAttribute-id",
          "name": "id",
          "style": {},
          "targets": [],
          "text": "id: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * jsdocs documentation for the attribute\n   */",
          "id": "/types/graph/node-attribute-NodeAttribute-docs",
          "name": "docs",
          "style": {},
          "targets": [],
          "text": "docs?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether the attribute is static\n   */",
          "id": "/types/graph/node-attribute-NodeAttribute-isStatic",
          "name": "isStatic",
          "style": {},
          "targets": [],
          "text": "isStatic?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * If the attribute is extended, this will contain the extended information\n   */",
          "id": "/types/graph/node-attribute-NodeAttribute-extended",
          "name": "extended",
          "style": {},
          "targets": [
            "/types/graph/node-attribute-extended-NodeAttributeExtended"
          ],
          "text": "extended?: NodeAttributeExtended;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The name of the attribute\n   */",
          "id": "/types/graph/node-attribute-NodeAttribute-name",
          "name": "name",
          "style": {},
          "targets": [],
          "text": "name: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The visibility/access level of the attribute (public, protected, private)\n   * @see {@link NodeAttributeScope}\n   */",
          "id": "/types/graph/node-attribute-NodeAttribute-scope",
          "name": "scope",
          "style": {},
          "targets": [
            "/types/graph/node-attribute-scope-NodeAttributeScope"
          ],
          "text": "scope?: NodeAttributeScope;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The styling configuration for this attribute\n   * @see {@link NodeStyle}\n   */",
          "id": "/types/graph/node-attribute-NodeAttribute-style",
          "name": "style",
          "style": {},
          "targets": [
            "/types/graph/node-style-NodeStyle"
          ],
          "text": "style?: NodeStyle;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The target nodeIds that this attribute points to.\n   */",
          "id": "/types/graph/node-attribute-NodeAttribute-targets",
          "name": "targets",
          "style": {},
          "targets": [],
          "text": "targets?: string[];",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The text content/label of the attribute\n   */",
          "id": "/types/graph/node-attribute-NodeAttribute-text",
          "name": "text",
          "style": {},
          "targets": [],
          "text": "text: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The type of attribute (attribute, method, separator, etc)\n   * @see {@link NodeAttributeType}\n   */",
          "id": "/types/graph/node-attribute-NodeAttribute-type",
          "name": "type",
          "style": {},
          "targets": [
            "/types/graph/node-attribute-type-NodeAttributeType"
          ],
          "text": "type: NodeAttributeType;",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents an attribute or method within a node in the diagram.\n */",
      "id": "/types/graph/node-attribute-NodeAttribute",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/graph/node-attribute-NodeAttribute-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "NodeAttribute"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Whether the node is locked in place\n   */",
          "id": "/types/graph/node-position-NodePosition-locked",
          "name": "locked",
          "style": {},
          "targets": [],
          "text": "locked: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The x position of the node\n   */",
          "id": "/types/graph/node-position-NodePosition-x",
          "name": "x",
          "style": {},
          "targets": [],
          "text": "x: number;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The y position of the node\n   */",
          "id": "/types/graph/node-position-NodePosition-y",
          "name": "y",
          "style": {},
          "targets": [],
          "text": "y: number;",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents a node position in the graph\n */",
      "id": "/types/graph/node-position-NodePosition",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/graph/node-position-NodePosition-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "NodePosition"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * The background color of the node element\n   */",
          "id": "/types/graph/node-style-NodeStyle-backgroundColor",
          "name": "backgroundColor",
          "style": {},
          "targets": [],
          "text": "backgroundColor?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The border color of the node element\n   */",
          "id": "/types/graph/node-style-NodeStyle-borderColor",
          "name": "borderColor",
          "style": {},
          "targets": [],
          "text": "borderColor?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The border width of the node element\n   */",
          "id": "/types/graph/node-style-NodeStyle-borderWidth",
          "name": "borderWidth",
          "style": {},
          "targets": [],
          "text": "borderWidth?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The text color of the node element\n   */",
          "id": "/types/graph/node-style-NodeStyle-color",
          "name": "color",
          "style": {},
          "targets": [],
          "text": "color?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The font size of text within the node element\n   */",
          "id": "/types/graph/node-style-NodeStyle-fontSize",
          "name": "fontSize",
          "style": {},
          "targets": [],
          "text": "fontSize?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The font weight of text within the node element\n   */",
          "id": "/types/graph/node-style-NodeStyle-fontWeight",
          "name": "fontWeight",
          "style": {},
          "targets": [],
          "text": "fontWeight?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The height of the node element\n   */",
          "id": "/types/graph/node-style-NodeStyle-height",
          "name": "height",
          "style": {},
          "targets": [],
          "text": "height?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The width of the node element\n   */",
          "id": "/types/graph/node-style-NodeStyle-width",
          "name": "width",
          "style": {},
          "targets": [],
          "text": "width?: string;",
          "type": "attribute"
        }
      ],
      "docs": "",
      "id": "/types/graph/node-style-NodeStyle",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/graph/node-style-NodeStyle-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "NodeStyle"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Unique identifier for the title\n   */",
          "id": "/types/graph/node-title-NodeTitle-id",
          "name": "id",
          "style": {},
          "targets": [],
          "text": "id: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The type of node (class, interface, etc)\n   * @see {@link NodeType}\n   */",
          "id": "/types/graph/node-title-NodeTitle-nodeType",
          "name": "nodeType",
          "style": {},
          "targets": [
            "/types/graph/node-type-NodeType"
          ],
          "text": "nodeType: NodeType;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The styling configuration for the title section\n   * @see {@link NodeStyle}\n   */",
          "id": "/types/graph/node-title-NodeTitle-style",
          "name": "style",
          "style": {},
          "targets": [
            "/types/graph/node-style-NodeStyle"
          ],
          "text": "style?: NodeStyle;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The text content/label displayed in the title\n   */",
          "id": "/types/graph/node-title-NodeTitle-text",
          "name": "text",
          "style": {},
          "targets": [],
          "text": "text: string;",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents the title/header section of a node in the diagram.\n */",
      "id": "/types/graph/node-title-NodeTitle",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/graph/node-title-NodeTitle-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "NodeTitle"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "id": "/types/graph/node-type-NodeType-class",
          "name": "class",
          "style": {},
          "text": "class",
          "type": "unionOption"
        },
        {
          "id": "/types/graph/node-type-NodeType-union",
          "name": "union",
          "style": {},
          "text": "union",
          "type": "unionOption"
        },
        {
          "id": "/types/graph/node-type-NodeType-interface",
          "name": "interface",
          "style": {},
          "text": "interface",
          "type": "unionOption"
        },
        {
          "id": "/types/graph/node-type-NodeType-type",
          "name": "type",
          "style": {},
          "text": "type",
          "type": "unionOption"
        },
        {
          "id": "/types/graph/node-type-NodeType-variable",
          "name": "variable",
          "style": {},
          "text": "variable",
          "type": "unionOption"
        }
      ],
      "docs": "/**\n * Represents the different types of nodes that can be displayed in the diagram.\n * - `class`: Represents a class definition\n * - `union`: Represents a union type, it can be an enum or a type that unions multiple types\n * - `interface`: Represents an interface definition\n * - `type`: Represents a type definition\n * - `variable`: Represents a variable declaration\n */",
      "id": "/types/graph/node-type-NodeType",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/graph/node-type-NodeType-TITLE",
        "nodeType": "union",
        "style": {},
        "text": "NodeType"
      },
      "type": "union"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Array of attributes, methods, or other items displayed in the node body\n   * @see {@link NodeAttribute}\n   */",
          "id": "/types/graph/node-Node-attributes",
          "name": "attributes",
          "style": {},
          "targets": [
            "/types/graph/node-attribute-NodeAttribute"
          ],
          "text": "attributes: NodeAttribute[];",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * jsdocs documentation for the node\n   */",
          "id": "/types/graph/node-Node-docs",
          "name": "docs",
          "style": {},
          "targets": [],
          "text": "docs?: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The names of the Nodes that this node extends from\n   */",
          "id": "/types/graph/node-Node-extends",
          "name": "extends",
          "style": {},
          "targets": [],
          "text": "extends?: string[];",
          "type": "attribute"
        },
        {
          "docs": "/** Unique identifier for the node */",
          "id": "/types/graph/node-Node-id",
          "name": "id",
          "style": {},
          "targets": [],
          "text": "id: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The position of the node in the graph\n   * @see {@link NodePosition}\n   */",
          "id": "/types/graph/node-Node-position",
          "name": "position",
          "style": {},
          "targets": [
            "/types/graph/node-position-NodePosition"
          ],
          "text": "position: NodePosition;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Optional styling configuration for the node\n   * @see {@link NodeStyle}\n   */",
          "id": "/types/graph/node-Node-style",
          "name": "style",
          "style": {},
          "targets": [
            "/types/graph/node-style-NodeStyle"
          ],
          "text": "style?: NodeStyle;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The title/header section of the node\n   * @see {@link NodeTitle}\n   */",
          "id": "/types/graph/node-Node-title",
          "name": "title",
          "style": {},
          "targets": [
            "/types/graph/node-title-NodeTitle"
          ],
          "text": "title: NodeTitle;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The type of node (class, interface, etc)\n   * @see {@link NodeType}\n   */",
          "id": "/types/graph/node-Node-type",
          "name": "type",
          "style": {},
          "targets": [
            "/types/graph/node-type-NodeType"
          ],
          "text": "type: NodeType;",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Represents a node in the diagram, which can be a class, interface, type, enum, function, or variable.\n */",
      "id": "/types/graph/node-Node",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/graph/node-Node-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "Node"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Array of link types to filter links by their type (e.g., inheritance, implementation, etc.).\n   * If a link type is provided, all links of that type will be excluded from the diagram.\n   * Empty array means no type filtering.\n   * @see {@link LinkType}\n   */",
          "id": "/types/config/config-links-filter-ConfigLinksFilter-filter_type",
          "name": "filter_type",
          "style": {},
          "targets": [
            "/types/graph/link-type-LinkType"
          ],
          "text": "filter_type: LinkType[];",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Interface defining the configuration for filtering links (relationships) in the diagram.\n */",
      "id": "/types/config/config-links-filter-ConfigLinksFilter",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/config/config-links-filter-ConfigLinksFilter-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "ConfigLinksFilter"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Whether to hide all links in the diagram.\n   * If true, no links will be displayed.\n   */",
          "id": "/types/config/config-links-options-ConfigLinksOptions-hide",
          "name": "hide",
          "style": {},
          "targets": [],
          "text": "hide?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide the arrows indicating link direction.\n   * If true, link lines will be shown without directional arrows.\n   */",
          "id": "/types/config/config-links-options-ConfigLinksOptions-hide_arrows",
          "name": "hide_arrows",
          "style": {},
          "targets": [],
          "text": "hide_arrows?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide the text labels on links.\n   * If true, relationship type labels will not be displayed.\n   */",
          "id": "/types/config/config-links-options-ConfigLinksOptions-hide_labels",
          "name": "hide_labels",
          "style": {},
          "targets": [],
          "text": "hide_labels?: boolean;",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Interface defining the display options for links (relationships) in the diagram.\n */",
      "id": "/types/config/config-links-options-ConfigLinksOptions",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/config/config-links-options-ConfigLinksOptions-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "ConfigLinksOptions"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Configuration for filtering which links should be displayed in the diagram.\n   * @see {@link ConfigLinksFilter}\n   */",
          "id": "/types/config/config-links-ConfigLinks-filter",
          "name": "filter",
          "style": {},
          "targets": [
            "/types/config/config-links-filter-ConfigLinksFilter"
          ],
          "text": "filter: ConfigLinksFilter;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Display options that control how links are rendered.\n   * @see {@link ConfigLinksOptions}\n   */",
          "id": "/types/config/config-links-ConfigLinks-options",
          "name": "options",
          "style": {},
          "targets": [
            "/types/config/config-links-options-ConfigLinksOptions"
          ],
          "text": "options: ConfigLinksOptions;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * The algorithm to use for pathing the links.\n   * @see {@link LinkPathAlgorithm}\n   */",
          "id": "/types/config/config-links-ConfigLinks-linkPathAlgorithm",
          "name": "linkPathAlgorithm",
          "style": {},
          "targets": [
            "/types/config/link-path-algorithm-LinkPathAlgorithm"
          ],
          "text": "linkPathAlgorithm: LinkPathAlgorithm;",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Interface defining the configuration for displaying links (relationships) in the diagram.\n */",
      "id": "/types/config/config-links-ConfigLinks",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/config/config-links-ConfigLinks-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "ConfigLinks"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Filter nodes by their name starting with the given string.\n   */",
          "id": "/types/config/config-nodes-filter-name-ConfigNodesFilterName-starts_with",
          "name": "starts_with",
          "style": {},
          "targets": [],
          "text": "starts_with: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Filter nodes by their name ending with the given string.\n   */",
          "id": "/types/config/config-nodes-filter-name-ConfigNodesFilterName-ends_with",
          "name": "ends_with",
          "style": {},
          "targets": [],
          "text": "ends_with: string;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Filter nodes by their name containing the given string.\n   */",
          "id": "/types/config/config-nodes-filter-name-ConfigNodesFilterName-includes",
          "name": "includes",
          "style": {},
          "targets": [],
          "text": "includes: string;",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Interface defining filters for nodes to be displayed in the diagram.\n */",
      "id": "/types/config/config-nodes-filter-name-ConfigNodesFilterName",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/config/config-nodes-filter-name-ConfigNodesFilterName-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "ConfigNodesFilterName"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Filter nodes by their name.\n   */",
          "id": "/types/config/config-nodes-filter-ConfigNodesFilter-filter_name",
          "name": "filter_name",
          "style": {},
          "targets": [
            "/types/config/config-nodes-filter-name-ConfigNodesFilterName"
          ],
          "text": "filter_name: ConfigNodesFilterName;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Array of strings to filter nodes by their file path or name.\n   * This array can contain directories, files and concrete node ids.\n   * If a directory is provided, all nodes within that directory will be excluded from the diagram.\n   * If a file is provided, all nodes within that file will be excluded from the diagram.\n   * If a concrete node id is provided, the node with that id will be excluded from the diagram.\n   * Empty array means no path filtering.\n   */",
          "id": "/types/config/config-nodes-filter-ConfigNodesFilter-filter_node",
          "name": "filter_node",
          "style": {},
          "targets": [],
          "text": "filter_node: string[];",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Array of node types to filter nodes by their type (e.g., class, interface, enum, etc.).\n   * If a node type is provided, all nodes of that type will be excluded from the diagram.\n   * Empty array means no type filtering.\n   * @see {@link NodeType}\n   */",
          "id": "/types/config/config-nodes-filter-ConfigNodesFilter-filter_type",
          "name": "filter_type",
          "style": {},
          "targets": [
            "/types/graph/node-type-NodeType"
          ],
          "text": "filter_type: NodeType[];",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Interface defining filters for nodes to be displayed in the diagram.\n */",
      "id": "/types/config/config-nodes-filter-ConfigNodesFilter",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/config/config-nodes-filter-ConfigNodesFilter-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "ConfigNodesFilter"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Whether to hide all private members (attributes and methods)\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_all_private",
          "name": "hide_all_private",
          "style": {},
          "targets": [],
          "text": "hide_all_private?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide all protected members (attributes and methods)\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_all_protected",
          "name": "hide_all_protected",
          "style": {},
          "targets": [],
          "text": "hide_all_protected?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide all public members (attributes and methods)\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_all_public",
          "name": "hide_all_public",
          "style": {},
          "targets": [],
          "text": "hide_all_public?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide all static members (attributes and methods)\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_all_static",
          "name": "hide_all_static",
          "style": {},
          "targets": [],
          "text": "hide_all_static?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide all attributes regardless of visibility\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_attributes",
          "name": "hide_attributes",
          "style": {},
          "targets": [],
          "text": "hide_attributes?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide private attributes\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_attributes_private",
          "name": "hide_attributes_private",
          "style": {},
          "targets": [],
          "text": "hide_attributes_private?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide protected attributes\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_attributes_protected",
          "name": "hide_attributes_protected",
          "style": {},
          "targets": [],
          "text": "hide_attributes_protected?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide public attributes\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_attributes_public",
          "name": "hide_attributes_public",
          "style": {},
          "targets": [],
          "text": "hide_attributes_public?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide the description for nodes\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_description",
          "name": "hide_description",
          "style": {},
          "targets": [],
          "text": "hide_description?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide all methods regardless of visibility\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_methods",
          "name": "hide_methods",
          "style": {},
          "targets": [],
          "text": "hide_methods?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide private methods\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_methods_private",
          "name": "hide_methods_private",
          "style": {},
          "targets": [],
          "text": "hide_methods_private?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide protected methods\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_methods_protected",
          "name": "hide_methods_protected",
          "style": {},
          "targets": [],
          "text": "hide_methods_protected?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide public methods\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_methods_public",
          "name": "hide_methods_public",
          "style": {},
          "targets": [],
          "text": "hide_methods_public?: boolean;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Whether to hide the type for nodes (e.g., class, interface, etc.)\n   */",
          "id": "/types/config/config-nodes-options-ConfigNodesOptions-hide_type",
          "name": "hide_type",
          "style": {},
          "targets": [],
          "text": "hide_type?: boolean;",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Type defining display options that control what information is shown inside the nodes.\n */",
      "id": "/types/config/config-nodes-options-ConfigNodesOptions",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/config/config-nodes-options-ConfigNodesOptions-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "ConfigNodesOptions"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Configuration for filtering which nodes should be displayed in the diagram.\n   * @see {@link ConfigNodesFilter}\n   */",
          "id": "/types/config/config-nodes-ConfigNodes-filter",
          "name": "filter",
          "style": {},
          "targets": [
            "/types/config/config-nodes-filter-ConfigNodesFilter"
          ],
          "text": "filter: ConfigNodesFilter;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Display options that control what information is shown inside the nodes.\n   * @see {@link ConfigNodesOptions}\n   */",
          "id": "/types/config/config-nodes-ConfigNodes-options",
          "name": "options",
          "style": {},
          "targets": [
            "/types/config/config-nodes-options-ConfigNodesOptions"
          ],
          "text": "options: ConfigNodesOptions;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Style configurations for each type of node (class, interface, etc).\n   * @see {@link NodeStyle}\n   */",
          "id": "/types/config/config-nodes-ConfigNodes-styles",
          "name": "styles",
          "style": {},
          "targets": [
            "/types/graph/node-type-NodeType",
            "/types/graph/node-style-NodeStyle"
          ],
          "text": "styles: { [k in NodeType]?: NodeStyle };",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Interface defining the configuration for displaying nodes in the diagram.\n */",
      "id": "/types/config/config-nodes-ConfigNodes",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/config/config-nodes-ConfigNodes-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "ConfigNodes"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "docs": "/**\n   * Additional options for customizing the diagram.\n   */",
          "id": "/types/config/config-Config-layoutAlgorithm",
          "name": "layoutAlgorithm",
          "style": {},
          "targets": [
            "/types/config/layout-algorithm-LayoutAlgorithm"
          ],
          "text": "layoutAlgorithm: LayoutAlgorithm;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Configuration for displaying relationships between nodes.\n   * @see {@link ConfigLinks}\n   */",
          "id": "/types/config/config-Config-links",
          "name": "links",
          "style": {},
          "targets": [
            "/types/config/config-links-ConfigLinks"
          ],
          "text": "links: ConfigLinks;",
          "type": "attribute"
        },
        {
          "docs": "/**\n   * Configuration for displaying nodes in the diagram.\n   * @see {@link ConfigNodes}\n   */",
          "id": "/types/config/config-Config-nodes",
          "name": "nodes",
          "style": {},
          "targets": [
            "/types/config/config-nodes-ConfigNodes"
          ],
          "text": "nodes: ConfigNodes;",
          "type": "attribute"
        }
      ],
      "docs": "/**\n * Main configuration object that controls the overall diagram appearance and behavior.\n * Contains settings for theme, display options, and filtering of nodes and relationships.\n */",
      "id": "/types/config/config-Config",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/config/config-Config-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "Config"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "id": "/types/config/layout-algorithm-LayoutAlgorithm-layered",
          "name": "layered",
          "style": {},
          "text": "layered",
          "type": "unionOption"
        },
        {
          "id": "/types/config/layout-algorithm-LayoutAlgorithm-mrtree",
          "name": "mrtree",
          "style": {},
          "text": "mrtree",
          "type": "unionOption"
        },
        {
          "id": "/types/config/layout-algorithm-LayoutAlgorithm-force",
          "name": "force",
          "style": {},
          "text": "force",
          "type": "unionOption"
        },
        {
          "id": "/types/config/layout-algorithm-LayoutAlgorithm-radial",
          "name": "radial",
          "style": {},
          "text": "radial",
          "type": "unionOption"
        },
        {
          "id": "/types/config/layout-algorithm-LayoutAlgorithm-box",
          "name": "box",
          "style": {},
          "text": "box",
          "type": "unionOption"
        },
        {
          "id": "/types/config/layout-algorithm-LayoutAlgorithm-random",
          "name": "random",
          "style": {},
          "text": "random",
          "type": "unionOption"
        }
      ],
      "docs": "/**\n * Represents the different types of layout algorithms for the diagram.\n * - `layered`: Layered layout\n * - `mrtree`: Multi-root tree layout\n * - `force`: Force-directed layout\n * - `radial`: Radial layout\n * - `box`: Box layout\n * - `random`: Random layout\n */",
      "id": "/types/config/layout-algorithm-LayoutAlgorithm",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/config/layout-algorithm-LayoutAlgorithm-TITLE",
        "nodeType": "union",
        "style": {},
        "text": "LayoutAlgorithm"
      },
      "type": "union"
    },
    {
      "attributes": [
        {
          "id": "/types/config/link-path-algorithm-LinkPathAlgorithm-straight",
          "name": "straight",
          "style": {},
          "text": "straight",
          "type": "unionOption"
        },
        {
          "id": "/types/config/link-path-algorithm-LinkPathAlgorithm-bezier",
          "name": "bezier",
          "style": {},
          "text": "bezier",
          "type": "unionOption"
        },
        {
          "id": "/types/config/link-path-algorithm-LinkPathAlgorithm-step",
          "name": "step",
          "style": {},
          "text": "step",
          "type": "unionOption"
        }
      ],
      "docs": "/**\n * What type of links should be used to connect the nodes.\n * - `straight`: Straight lines\n * - `bezier`: Bezier curves\n * - `step`: Step lines\n */",
      "id": "/types/config/link-path-algorithm-LinkPathAlgorithm",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/config/link-path-algorithm-LinkPathAlgorithm-TITLE",
        "nodeType": "union",
        "style": {},
        "text": "LinkPathAlgorithm"
      },
      "type": "union"
    },
    {
      "attributes": [
        {
          "id": "/types/utils/checkbox-partial-checked-status-CheckboxPartialCheckedStatus-checked",
          "name": "checked",
          "style": {},
          "text": "checked",
          "type": "unionOption"
        },
        {
          "id": "/types/utils/checkbox-partial-checked-status-CheckboxPartialCheckedStatus-unchecked",
          "name": "unchecked",
          "style": {},
          "text": "unchecked",
          "type": "unionOption"
        },
        {
          "id": "/types/utils/checkbox-partial-checked-status-CheckboxPartialCheckedStatus-partial",
          "name": "partial",
          "style": {},
          "text": "partial",
          "type": "unionOption"
        }
      ],
      "docs": "/**\n * Represents the different types of messages that are sent between components of the web\n * - `checked`: The checkbox is checked\n * - `unchecked`: The checkbox is unchecked\n * - `partial`: The checkbox is partially checked\n */",
      "id": "/types/utils/checkbox-partial-checked-status-CheckboxPartialCheckedStatus",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/utils/checkbox-partial-checked-status-CheckboxPartialCheckedStatus-TITLE",
        "nodeType": "union",
        "style": {},
        "text": "CheckboxPartialCheckedStatus"
      },
      "type": "union"
    },
    {
      "attributes": [
        {
          "docs": "",
          "id": "/types/utils/tree-node-TreeNode-id",
          "name": "id",
          "style": {},
          "targets": [],
          "text": "id: string;",
          "type": "attribute"
        },
        {
          "docs": "",
          "id": "/types/utils/tree-node-TreeNode-isFolder",
          "name": "isFolder",
          "style": {},
          "targets": [],
          "text": "isFolder: boolean;",
          "type": "attribute"
        },
        {
          "docs": "",
          "id": "/types/utils/tree-node-TreeNode-isFile",
          "name": "isFile",
          "style": {},
          "targets": [],
          "text": "isFile: boolean;",
          "type": "attribute"
        },
        {
          "docs": "",
          "id": "/types/utils/tree-node-TreeNode-isElement",
          "name": "isElement",
          "style": {},
          "targets": [],
          "text": "isElement: boolean;",
          "type": "attribute"
        },
        {
          "docs": "",
          "id": "/types/utils/tree-node-TreeNode-checked",
          "name": "checked",
          "style": {},
          "targets": [
            "/types/utils/checkbox-partial-checked-status-CheckboxPartialCheckedStatus"
          ],
          "text": "checked: CheckboxPartialCheckedStatus;",
          "type": "attribute"
        },
        {
          "docs": "",
          "id": "/types/utils/tree-node-TreeNode-children",
          "name": "children",
          "style": {},
          "targets": [
            "/types/utils/tree-node-TreeNode"
          ],
          "text": "children?: { [key: string]: TreeNode };",
          "type": "attribute"
        },
        {
          "docs": "",
          "id": "/types/utils/tree-node-TreeNode-name",
          "name": "name",
          "style": {},
          "targets": [],
          "text": "name: string;",
          "type": "attribute"
        }
      ],
      "docs": "",
      "id": "/types/utils/tree-node-TreeNode",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/utils/tree-node-TreeNode-TITLE",
        "nodeType": "interface",
        "style": {},
        "text": "TreeNode"
      },
      "type": "interface"
    },
    {
      "attributes": [
        {
          "id": "/types/export/export-format-ExportFormat-json",
          "name": "json",
          "style": {},
          "text": "json",
          "type": "unionOption"
        },
        {
          "id": "/types/export/export-format-ExportFormat-png",
          "name": "png",
          "style": {},
          "text": "png",
          "type": "unionOption"
        },
        {
          "id": "/types/export/export-format-ExportFormat-png-transparent",
          "name": "png-transparent",
          "style": {},
          "text": "png-transparent",
          "type": "unionOption"
        }
      ],
      "docs": "/**\n * Represents the different formats that can be used to export the graph\n * - `json`: JSON format\n * - `png`: PNG format\n * - `png-transparent`: PNG format with transparent background\n */",
      "id": "/types/export/export-format-ExportFormat",
      "position": {
        "locked": false,
        "x": 0,
        "y": 0
      },
      "title": {
        "id": "/types/export/export-format-ExportFormat-TITLE",
        "nodeType": "union",
        "style": {},
        "text": "ExportFormat"
      },
      "type": "union"
    }
  ],
  "links": [
    {
      "sourceId": "/types/messages/msg-load-graph-MsgLoadGraph",
      "sourceAttributeIds": [
        "/types/messages/msg-load-graph-MsgLoadGraph-graph"
      ],
      "targetId": "/types/graph/graph-Graph",
      "type": "association"
    },
    {
      "sourceId": "/types/messages/msg-open-node-code-MsgOpenNodeCode",
      "sourceAttributeIds": [
        "/types/messages/msg-open-node-code-MsgOpenNodeCode-node"
      ],
      "targetId": "/types/graph/node-Node",
      "type": "association"
    },
    {
      "sourceId": "/types/messages/msg-update-layout-algorithm-MsgUpdateLayoutAlgorithm",
      "sourceAttributeIds": [
        "/types/messages/msg-update-layout-algorithm-MsgUpdateLayoutAlgorithm-layoutAlgorithm"
      ],
      "targetId": "/types/config/layout-algorithm-LayoutAlgorithm",
      "type": "association"
    },
    {
      "sourceId": "/types/messages/msg-update-link-path-algorithm-MsgUpdateLinkPathAlgorithm",
      "sourceAttributeIds": [
        "/types/messages/msg-update-link-path-algorithm-MsgUpdateLinkPathAlgorithm-linkPathAlgorithm"
      ],
      "targetId": "/types/config/link-path-algorithm-LinkPathAlgorithm",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/graph-Graph",
      "sourceAttributeIds": [
        "/types/graph/graph-Graph-config"
      ],
      "targetId": "/types/config/config-Config",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/graph-Graph",
      "sourceAttributeIds": [
        "/types/graph/graph-Graph-nodes"
      ],
      "targetId": "/types/graph/node-Node",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/graph-Graph",
      "sourceAttributeIds": [
        "/types/graph/graph-Graph-links"
      ],
      "targetId": "/types/graph/link-Link",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/link-Link",
      "sourceAttributeIds": [
        "/types/graph/link-Link-type"
      ],
      "targetId": "/types/graph/link-type-LinkType",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/node-attribute-NodeAttribute",
      "sourceAttributeIds": [
        "/types/graph/node-attribute-NodeAttribute-extended"
      ],
      "targetId": "/types/graph/node-attribute-extended-NodeAttributeExtended",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/node-attribute-NodeAttribute",
      "sourceAttributeIds": [
        "/types/graph/node-attribute-NodeAttribute-scope"
      ],
      "targetId": "/types/graph/node-attribute-scope-NodeAttributeScope",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/node-attribute-NodeAttribute",
      "sourceAttributeIds": [
        "/types/graph/node-attribute-NodeAttribute-style"
      ],
      "targetId": "/types/graph/node-style-NodeStyle",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/node-attribute-NodeAttribute",
      "sourceAttributeIds": [
        "/types/graph/node-attribute-NodeAttribute-type"
      ],
      "targetId": "/types/graph/node-attribute-type-NodeAttributeType",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/node-title-NodeTitle",
      "sourceAttributeIds": [
        "/types/graph/node-title-NodeTitle-nodeType"
      ],
      "targetId": "/types/graph/node-type-NodeType",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/node-title-NodeTitle",
      "sourceAttributeIds": [
        "/types/graph/node-title-NodeTitle-style"
      ],
      "targetId": "/types/graph/node-style-NodeStyle",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/node-Node",
      "sourceAttributeIds": [
        "/types/graph/node-Node-attributes"
      ],
      "targetId": "/types/graph/node-attribute-NodeAttribute",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/node-Node",
      "sourceAttributeIds": [
        "/types/graph/node-Node-position"
      ],
      "targetId": "/types/graph/node-position-NodePosition",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/node-Node",
      "sourceAttributeIds": [
        "/types/graph/node-Node-style"
      ],
      "targetId": "/types/graph/node-style-NodeStyle",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/node-Node",
      "sourceAttributeIds": [
        "/types/graph/node-Node-title"
      ],
      "targetId": "/types/graph/node-title-NodeTitle",
      "type": "association"
    },
    {
      "sourceId": "/types/graph/node-Node",
      "sourceAttributeIds": [
        "/types/graph/node-Node-type"
      ],
      "targetId": "/types/graph/node-type-NodeType",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-links-filter-ConfigLinksFilter",
      "sourceAttributeIds": [
        "/types/config/config-links-filter-ConfigLinksFilter-filter_type"
      ],
      "targetId": "/types/graph/link-type-LinkType",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-links-ConfigLinks",
      "sourceAttributeIds": [
        "/types/config/config-links-ConfigLinks-filter"
      ],
      "targetId": "/types/config/config-links-filter-ConfigLinksFilter",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-links-ConfigLinks",
      "sourceAttributeIds": [
        "/types/config/config-links-ConfigLinks-options"
      ],
      "targetId": "/types/config/config-links-options-ConfigLinksOptions",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-links-ConfigLinks",
      "sourceAttributeIds": [
        "/types/config/config-links-ConfigLinks-linkPathAlgorithm"
      ],
      "targetId": "/types/config/link-path-algorithm-LinkPathAlgorithm",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-nodes-filter-ConfigNodesFilter",
      "sourceAttributeIds": [
        "/types/config/config-nodes-filter-ConfigNodesFilter-filter_name"
      ],
      "targetId": "/types/config/config-nodes-filter-name-ConfigNodesFilterName",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-nodes-filter-ConfigNodesFilter",
      "sourceAttributeIds": [
        "/types/config/config-nodes-filter-ConfigNodesFilter-filter_type"
      ],
      "targetId": "/types/graph/node-type-NodeType",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-nodes-ConfigNodes",
      "sourceAttributeIds": [
        "/types/config/config-nodes-ConfigNodes-filter"
      ],
      "targetId": "/types/config/config-nodes-filter-ConfigNodesFilter",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-nodes-ConfigNodes",
      "sourceAttributeIds": [
        "/types/config/config-nodes-ConfigNodes-options"
      ],
      "targetId": "/types/config/config-nodes-options-ConfigNodesOptions",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-nodes-ConfigNodes",
      "sourceAttributeIds": [
        "/types/config/config-nodes-ConfigNodes-styles"
      ],
      "targetId": "/types/graph/node-type-NodeType",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-nodes-ConfigNodes",
      "sourceAttributeIds": [
        "/types/config/config-nodes-ConfigNodes-styles"
      ],
      "targetId": "/types/graph/node-style-NodeStyle",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-Config",
      "sourceAttributeIds": [
        "/types/config/config-Config-layoutAlgorithm"
      ],
      "targetId": "/types/config/layout-algorithm-LayoutAlgorithm",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-Config",
      "sourceAttributeIds": [
        "/types/config/config-Config-links"
      ],
      "targetId": "/types/config/config-links-ConfigLinks",
      "type": "association"
    },
    {
      "sourceId": "/types/config/config-Config",
      "sourceAttributeIds": [
        "/types/config/config-Config-nodes"
      ],
      "targetId": "/types/config/config-nodes-ConfigNodes",
      "type": "association"
    },
    {
      "sourceId": "/types/utils/tree-node-TreeNode",
      "sourceAttributeIds": [
        "/types/utils/tree-node-TreeNode-checked"
      ],
      "targetId": "/types/utils/checkbox-partial-checked-status-CheckboxPartialCheckedStatus",
      "type": "association"
    },
    {
      "sourceId": "/types/utils/tree-node-TreeNode",
      "sourceAttributeIds": [
        "/types/utils/tree-node-TreeNode-children"
      ],
      "targetId": "/types/utils/tree-node-TreeNode",
      "type": "association"
    }
  ],
  "config": {
    "layoutAlgorithm": "layered",
    "links": {
      "filter": {
        "filter_type": []
      },
      "options": {},
      "linkPathAlgorithm": "straight"
    },
    "nodes": {
      "filter": {
        "filter_name": {
          "starts_with": "",
          "ends_with": "",
          "includes": ""
        },
        "filter_node": [],
        "filter_type": []
      },
      "options": {},
      "styles": {
        "class": {
          "backgroundColor": "#c7eeff"
        },
        "union": {
          "backgroundColor": "#e7ccff"
        },
        "interface": {
          "backgroundColor": "#7ec0c4"
        },
        "type": {
          "backgroundColor": "#bdd8ff"
        },
        "variable": {
          "backgroundColor": "#ffd1d1"
        }
      }
    }
  }
}